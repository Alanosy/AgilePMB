<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.alan.agile.mapper.TProjectsMapper">

    <resultMap id="BaseResultMap" type="cn.org.alan.agile.model.entity.TProjects">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
            <result property="userid" column="userid" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,content,
        createtime,userid
    </sql>
    <delete id="closeItem">
        <![CDATA[
        delete from T_Projects p where p.id = #{itemId};
        delete from T_Issues i where i.itemid = #{itemId};
        delete from T_Remarks re where re.itemid = #{itemId};
        delete from T_Requirements r where r.itemid = #{itemId};
        delete from T_Task t where t.itemid = #{itemId};
        ]]>

    </delete>
    <delete id="deleteProjectById">
        delete from T_Projects p where p.id = #{itemId}
    </delete>

    <delete id="deleteIssuesByItemId">
        delete from T_Issues i where i.itemid = #{itemId}
    </delete>

    <delete id="deleteRemarksByItemId">
        delete from T_Remarks r where r.itemid = #{itemId}
    </delete>

    <delete id="deleteRequirementsByItemId">
        delete from T_Requirements re where re.itemid = #{itemId}
    </delete>

    <delete id="deleteTaskByItemId">
        delete from T_Tasks t where t.itemid = #{itemId}
    </delete>
    <select id="selectProject" resultType="cn.org.alan.agile.model.vo.project.ProjectPageVo">
        select p.id,p.`name`,p.state,p.startdate,p.enddate,
        (SELECT count(*) from T_Requirements r WHERE r.itemid=p.id)as reqcount,
        (SELECT count(*) from T_Issues i WHERE i.itemid=p.id)as issuecount,
        (SELECT count(*) from T_Tasks t WHERE t.itemid=p.id)as taskcount,
        (SELECT u.realname from T_Users u WHERE u.id=p.userid) as username
        from T_Projects p
        <trim prefixOverrides="and" prefix="where">
            p.teamid = #{teamId}
            <if test='itemName!=null and itemName!=""'>
                and p.name LIKE CONCAT('%', #{itemName}, '%')
            </if>
            <if test='type==1 and type!=null and type!=""'>
                and p.userid == #{userId}
            </if>
            <if test='type==2 and type!=null and type!=""'>
                and p.userid = #{userId}
            </if>

        </trim>

    </select>
    <select id="fetchProjects" resultType="cn.org.alan.agile.model.vo.project.fetchProjectsVo">

        select p.id ,p.name
        from T_Projects p
        where p.teamid = #{teamId}
    </select>
    <select id="getOverviewItem" resultType="cn.org.alan.agile.model.vo.project.OverviewItemGetVo">

        SELECT
        p.`name` AS itemName,
        u.realname AS userName,
        p.state AS state,
        (SELECT COUNT(*) FROM T_Requirements r WHERE r.itemid = p.id) AS reqNum,
        (SELECT COUNT(*) FROM T_Requirements r WHERE r.itemid = p.id AND r.state = 6 ) AS reqfNum,
        (SELECT COUNT(*) FROM T_Issues i WHERE i.itemid = p.id  ) AS issueNum,
        (SELECT COUNT(*) FROM T_Issues i WHERE i.itemid = p.id AND i.state IN (3, 6) ) AS issuefNum,
        (SELECT COUNT(*) FROM T_Tasks t WHERE t.itemid = p.id  ) AS taskNum,
        (SELECT COUNT(*) FROM T_Tasks t WHERE t.itemid = p.id AND t.state = 2 ) AS taskfNum
        FROM
        T_Projects p
        LEFT JOIN
        T_Users u ON u.id = p.userid
        WHERE
        p.id = #{itemId}

    </select>
    <select id="getItemContent" resultType="cn.org.alan.agile.model.vo.project.ItemContentGetVo">

        select p.content
        from T_Projects p
        where p.id = #{itemId}
    </select>


</mapper>
